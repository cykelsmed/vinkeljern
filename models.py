"""
Data models for the Vinkeljernet application.

This module defines the data structures used for representing editorial DNA profiles,
news angles, and other application entities.
"""

from typing import Dict, List, Optional, Any, Union
from pydantic import BaseModel, Field, validator, field_validator


class RedaktionelDNA(BaseModel):
    """
    Editorial DNA profile model.

    Fields:
      - navn: The name of the profile.
      - beskrivelse: A description of the profile.
      - kerneprincipper: List of core principles.
      - tone_og_stil: A plain string describing the tone and style.
                     NOTE: This field is a string and MUST NOT be treated as a dictionary.
      - nyhedsprioritering: A dictionary mapping news criteria to their priority weights.
      - fokusOmrader: List of focus areas.
      - noGoOmrader: List of no-go areas.
    """
    navn: str
    beskrivelse: str
    kerneprincipper: List[str]
    tone_og_stil: str  # This field is explicitly a string (not a dict)
    nyhedsprioritering: Dict[str, int]
    fokusOmrader: List[str]
    noGoOmrader: List[str] = []

    class Config:
        populate_by_name = True  # (For pydantic v2 compatibility)


class VinkelForslag(BaseModel):
    """
    Model for representing a news angle suggestion.
    
    This standardizes the format for angles generated by the system.
    """
    overskrift: str = Field(
        ..., 
        description="Vinkelens overskrift/rubrik, kort og præcis"
    )
    beskrivelse: str = Field(
        ..., 
        description="Kort beskrivelse af vinklen, typisk 2-3 sætninger"
    )
    nyhedskriterier: List[str] = Field(
        ..., 
        description="Liste af nyhedskriterier, som vinklen rammer"
    )
    begrundelse: str = Field(
        ..., 
        description="Begrundelse for hvorfor vinklen passer til mediets profil"
    )
    startSpørgsmål: List[str] = Field(
        ..., 
        description="Liste af potentielle startspørgsmål til interviews"
    )
    flags: Optional[List[str]] = Field(
        default=None, 
        description="Valgfrie flag til at markere særlige egenskaber ved vinklen"
    )
    kriterieScore: Optional[float] = Field(
        default=None, 
        description="Beregnet score baseret på matchende nyhedskriterier"
    )
    
    @validator('overskrift')
    def validate_overskrift(cls, value):
        """Validate headline length."""
        if len(value) > 100:
            raise ValueError("Overskriften er for lang (maks. 100 tegn)")
        return value
    
    @validator('beskrivelse')
    def validate_beskrivelse(cls, value):
        """Validate description length."""
        if len(value) > 500:
            raise ValueError("Beskrivelsen er for lang (maks. 500 tegn)")
        return value
    
    @validator('nyhedskriterier')
    def validate_nyhedskriterier(cls, value):
        """Validate that nyhedskriterier is not empty."""
        if not value:
            raise ValueError("Der skal være mindst ét nyhedskriterium")
        return value
    
    class Config:
        """Configuration for the VinkelForslag model."""
        json_schema_extra = {
            "example": {
                "overskrift": "Klimaforandringer truer dansk landbrug: Hver tredje landmand frygter konkurs",
                "beskrivelse": "Nye tal viser, at danske landmænd i stigende grad bliver økonomisk presset af klimaforandringer. Tørke og oversvømmelser har reduceret udbyttet med gennemsnitligt 22% i 2023.",
                "nyhedskriterier": ["Væsentlighed", "Konflikt", "Aktualitet"],
                "begrundelse": "Vinklen kombinerer de folkelige konsekvenser med et aktuelt problem og rammer vores fokus på almindelige danskeres udfordringer.",
                "startSpørgsmål": [
                    "Hvordan har klimaforandringerne konkret påvirket din drift det seneste år?",
                    "Hvad mener du, politikerne bør gøre for at hjælpe landbruget gennem klimakrisen?"
                ],
                "flags": ["Kræver case", "Mulighed for grafik"],
                "kriterieScore": 7.5
            }
        }